name: Alpine
on:
  push:
    paths:
      - .github/workflows/alpine.yml
      - shell/**
      - .dockerignore
      - alpine.Dockerfile
  pull_request:
    paths:
      - .github/workflows/alpine.yml
      - shell/**
      - .dockerignore
      - alpine.Dockerfile

jobs:
  verify:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      - uses: actions/checkout@v3.3.0

      - name: Build image
        run: docker build -f alpine.Dockerfile .

  publish:
    needs: [verify]
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.3.0

      - uses: docker/setup-qemu-action@v2.1.0
      - uses: docker/setup-buildx-action@v2.4.0

      - uses: docker/login-action@v2.1.0
        with:
          username: kbuley
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set variables
        id: vars
        run: |
          BRANCH=${GITHUB_REF#refs/heads/}
          TAG=${GITHUB_REF#refs/tags/}
          echo "commit=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "created=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT

          if [ "$TAG" != "$GITHUB_REF" ]; then
            echo "version=$TAG" >> $GITHUB_OUTPUT
            echo "alpine_version=$TAG-alpine" >> $GITHUB_OUTPUT
            echo "platforms=linux/amd64" >> $GITHUB_OUTPUT
          elif [ "$BRANCH" = "main" ]; then
            echo "version=latest" >> $GITHUB_OUTPUT
            echo "alpine_version=alpine" >> $GITHUB_OUTPUT
            echo "platforms=linux/amd64" >> $GITHUB_OUTPUT
          else
            echo "version=$BRANCH" >> $GITHUB_OUTPUT
            echo "alpine_version=$BRANCH-alpine" >> $GITHUB_OUTPUT
            echo "platforms=linux/amd64" >> $GITHUB_OUTPUT
          fi

      - name: Build and push final image
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          file: ./alpine.Dockerfile
          platforms: ${{ steps.vars.outputs.platforms }}
          build-args: |
            CREATED=${{ steps.vars.outputs.created }}
            COMMIT=${{ steps.vars.outputs.commit }}
            VERSION=${{ steps.vars.outputs.version }}
          tags: |
            kbuley/rustdevcontainer:${{ steps.vars.outputs.version }}
            kbuley/rustdevcontainer:${{ steps.vars.outputs.alpine_version }}
          push: true
